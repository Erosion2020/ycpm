package org.erosion2020.util;

import java.io.*;
import java.util.Base64;

public class ClassFiles {
	public static String classAsFile(final Class<?> clazz) {
		return classAsFile(clazz, true);
	}
	
	public static String classAsFile(final Class<?> clazz, boolean suffix) {
		String str;
		if (clazz.getEnclosingClass() == null) {
			str = clazz.getName().replace(".", "/");
		} else {
			str = classAsFile(clazz.getEnclosingClass(), false) + "$" + clazz.getSimpleName();
		}
		if (suffix) {
			str += ".class";			
		}
		return str;  
	}

	public static byte[] classAsBytes(final Class<?> clazz) {
		try {
			final byte[] buffer = new byte[1024];
			final String file = classAsFile(clazz);
			final InputStream in = ClassFiles.class.getClassLoader().getResourceAsStream(file);
			if (in == null) {
				throw new IOException("couldn't find '" + file + "'");
			}
			final ByteArrayOutputStream out = new ByteArrayOutputStream();
			int len;
			while ((len = in.read(buffer)) != -1) {
				out.write(buffer, 0, len);
			}
			return out.toByteArray();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
	}

	public static void base64JavaClass2File(String base64Data, File target){
		boolean classFile = target.getPath().endsWith(".class");
		if(!classFile){
			throw new RuntimeException("错误的 .class文件路径" + target.getPath());
		}
		// 解码 Base64 数据
		byte[] classData = Base64.getDecoder().decode(base64Data);
		// 写入Class文件
		try (FileOutputStream fos = new FileOutputStream(target)) {
			fos.write(classData);
			System.out.println("Class file decoded successfully!");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		base64JavaClass2File("",
				new File("C:\\Users\\erosi\\Desktop\\hello.class"));
	}

	
}
